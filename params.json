{"name":"A Stokes-Brinkman solver in Julia","tagline":"","body":"### Intro \r\nHigh-order, parallel, matrix-free finite element solver for Stokes and Brinkman flow written in Julia. \r\n\r\nDetails and benchmarks can be found [here](temp.com). \r\n\r\n### Basic Usage \r\nThere are two implementations of the software, one each for a serial Julia implementation, a parallel Julia implementation, and a serial Matlab implementation. For each implementation, there are three versions that correspond to various finite element assembly methods, using assembled matrices, matrix-free methods, and matrix-free methods using tensor products. In each of these subfolder (e.g., julia-parallel/efficient-operators), the main driver is a file called \"sss\". \r\n\r\nFrom julia, run ```include(sss.jl)``` to start an interactive session that will prompt you for a type of test problem to solve (lid-driven cavity or brinkman flow through obstacles), mesh size, preconditioning steps, etc. \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}